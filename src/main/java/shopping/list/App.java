/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package shopping.list;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.HashMap;
import java.util.function.BinaryOperator;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Supplier;
import java.util.stream.Collectors;

public class App {
    public static void main(String[] args) {
        new App().readFromFile("/src/main/resources/items");
    }

    public void readFromFile(String directory) {
        BinaryOperator<Double> sumValues = (c, e) -> c + e;
        try {            
            Files.readAllLines(Paths.get(System.getProperty("user.dir")+directory), StandardCharsets.UTF_8)
                .stream()
                .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()))
                .entrySet()
                .stream()
                .map(Fruit::ConvertMapEntryToFruit)
                .map(fruit -> {
                    fruit.price = Fruit.getItemPrice.apply(fruit.name);
                    Double subtotal = fruit.retriveCalculationFunction.apply(fruit.name).apply(fruit);
                    fruit.subTotal = subtotal;
                    return fruit;
                })
                // .peek(LambdaUtils.printBaseItemInfo)
                .peek(fruit -> fruit.printSubtotal.accept(fruit))
                .map(e -> e.subTotal)
                .reduce(sumValues)
                .ifPresent(printGrandTotal);
            
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public Consumer<Double> printGrandTotal = grandTotal -> {
        System.out.println(String.format("Grand Total: $%s", LambdaUtils.formatDouble.apply(grandTotal)));
    };
}
