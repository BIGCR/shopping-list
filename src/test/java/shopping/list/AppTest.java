/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package shopping.list;

import org.testng.annotations.*;
import static org.testng.Assert.*;
import java.util.HashMap;
import static shopping.list.App.formatDouble;

public class AppTest {
    // @Test public void testWithInvalidItems() {
    //     App classUnderTest = new App();
    //     HashMap<String, Fruit> items = classUnderTest.readFromFile("/src/test/resources/listWithInvalidItems");
    //     assertEquals(formatDouble(items.get(Constants.APPLE).subTotal), formatDouble(1.25));
    //     assertEquals(formatDouble(items.get(Constants.ORANGE).subTotal), formatDouble(.90));
    //     assertEquals(formatDouble(items.get(Constants.BANANA).subTotal), formatDouble(.60));
    //     assertEquals(formatDouble(items.get(Constants.PAPAYA).subTotal), formatDouble(2.00));
    //     assertEquals(formatDouble(classUnderTest.calculateTotal(items)), formatDouble(4.75));
    // }

    // @Test public void testHappyPath() {
    //     App classUnderTest = new App();
    //     HashMap<String, Fruit> items = classUnderTest.readFromFile("/src/test/resources/happyPathList");
    //     assertEquals(formatDouble(items.get(Constants.APPLE).subTotal), formatDouble(1.00));
    //     assertEquals(formatDouble(items.get(Constants.ORANGE).subTotal), formatDouble(.90));
    //     assertEquals(formatDouble(items.get(Constants.BANANA).subTotal), formatDouble(.45));
    //     assertEquals(formatDouble(items.get(Constants.PAPAYA).subTotal), formatDouble(1.00));
    //     assertEquals(formatDouble(classUnderTest.calculateTotal(items)), formatDouble(3.35));
    // }

    // @Test public void testEmptyList() {
    //     App classUnderTest = new App();
    //     HashMap<String, Fruit> items = classUnderTest.readFromFile("/src/test/resources/emptyList");
    //     assertNotNull(classUnderTest);
    //     assertNotNull(items);
    // }

    // @Test public void testListWithBlankItems() {
    //     App classUnderTest = new App();
    //     HashMap<String, Fruit> items = classUnderTest.readFromFile("/src/test/resources/listWithBlankItems");
    //     assertEquals(formatDouble(items.get(Constants.APPLE).subTotal), formatDouble(.75));
    //     assertEquals(formatDouble(items.get(Constants.ORANGE).subTotal), formatDouble(.60));
    //     assertEquals(formatDouble(items.get(Constants.BANANA).subTotal), formatDouble(.30));
    //     assertEquals(formatDouble(items.get(Constants.PAPAYA).subTotal), formatDouble(.50));
    //     assertEquals(formatDouble(classUnderTest.calculateTotal(items)), formatDouble(2.15));
    // }   
}